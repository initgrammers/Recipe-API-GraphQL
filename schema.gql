# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  id: Int!
  name: String!
}

input CreateCategoryInput {
  name: String!
}

input CreateRecipeInput {
  description: String
  ingredients: String!
  name: String!
}

input CreateUserInput {
  email: String!
  name: String
  password: String!
}

type LoginResponse {
  accessToken: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createCategory(CategoryInput: CreateCategoryInput!): Category!
  createRecipe(RecipeInput: CreateRecipeInput!): Recipe!
  deleteCategory(id: Float!): Boolean!
  deleteRecipe(id: Float!): Boolean!
  deleteUser(id: Float!): Boolean!
  login(UserInput: LoginUserInput!): LoginResponse!
  signUp(UserInput: CreateUserInput!): Boolean!
  updateCategory(CategoryInput: UpdateCategoryInput!, id: Float!): Category!
  updateRecipe(RecipeInput: UpdateRecipeInput!, id: Float!): Recipe!
  updateUser(UserInput: UpdateUserInput!, id: Float!): User!
}

type Query {
  getCategories: [Category!]
  getMyRecipes(userId: Float!): Recipe
  getOneCategory(id: Float!): Category
  getOneRecipe(id: Float!): Recipe
  getOneRecipeByIngredient(ingredient: String!): Recipe
  getOneRecipeByName(name: String!): Recipe
  getRecipes: [Recipe!]
  getUser(name: String!): User
  getUsers: [User!]
}

type Recipe {
  categories: [Category!]!
  description: String
  id: Int!
  ingredients: String!
  name: String!
  user: User!
}

input UpdateCategoryInput {
  name: String!
}

input UpdateRecipeInput {
  description: String
  ingredients: String!
  name: String!
}

input UpdateUserInput {
  email: String!
  name: String
  password: String!
}

type User {
  email: String!
  id: Int!
  name: String!
  password: String!
  recipes: [Recipe!]!
}
